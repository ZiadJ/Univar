using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Univar
{
    /// <summary>
    /// All source storage types for our data.
    /// </summary>
    public enum Source
    {
        None,
        QueryString,
        Session,
        Cookie,
        Cache,
        /// Persists data within Json files on the server.
        /// Note that a folder with appropriate rights is required to store the Json files created.
        /// See property DefaultFolderPath in class JsonDoc for further details.
        JsonDoc,

        /// <summary>
        /// A session storage with a scope limited to the current page only.
        /// </summary>
        SessionByPath,

        /// <summary>
        /// A cookie storage with a scope limited to the current page only.
        /// It will no longer be available to the user when the cookie expires.
        /// </summary>
        CookieByPath,
        /// <summary>
        /// A cookie storage with a scope limited to the current session only. 
        /// It will no longer be available to the user when the session expires.
        /// </summary>
        CookieBySession,

        /// <summary>
        /// A cache storage with a scope limited to the current page only.
        /// </summary>
        CacheByPath,
        /// <summary>
        /// A cache storage with a scope limited to the current session only. 
        /// It will no longer be available to the user when the session expires.
        /// </summary>
        CacheBySession,
        /// <summary>
        /// A cache storage with a scope limited to the current page only.
        /// </summary>
        CacheByUser,
        /// <summary>
        /// A cache storage with a scope limited to the current browser only by makint use of an autogenerated id stored in a cookie.
        /// </summary>
        CacheByCookie,
        /// <summary>
        /// A cache storage with a scope limited to the current user and page only.
        /// </summary>
        CacheByCookieAndPath,

        /// <summary>
        /// A storage using a server side file to store data as json text.
        /// </summary>
        JsonDocByPath,
        JsonDocByUser,
        JsonDocSession,
        JsonDocByCookie,
        JsonDocByCookieAndPath,



        ReadOnlyQueryString,
        ReadOnlySession,
        ReadOnlyCookie,
        ReadOnlyCache,
        ReadOnlyJsonDoc,

        /// <summary>
        /// A readonly session storage with a scope limited to the current page only.
        /// </summary>
        ReadOnlySessionByPath,

        /// <summary>
        /// A readonly cookie storage with a scope limited to the current page only.
        /// It will no longer be available to the user when the cookie expires.
        /// </summary>
        ReadOnlyCookieByPath,
        /// <summary>
        /// A readonly cookie storage with a scope limited to the current session only. 
        /// It will no longer be available to the user when the session expires.
        /// </summary>
        ReadOnlyCookieBySession,



        /// <summary>
        /// A readonly cache storage with a scope limited to the current page only.
        /// </summary>
        ReadOnlyCacheByPath,
        /// <summary>
        /// A readonly cache storage with a scope limited to the current session only. 
        /// It will no longer be available to the user when the session expires.
        /// </summary>
        ReadOnlyCacheBySession,
        /// <summary>
        /// A readonly cache storage with a scope limited to the current page only.
        /// </summary>
        ReadOnlyCacheByUser,
        /// <summary>
        /// A readonly cache storage with a scope limited to the current browser only by makint use of an autogenerated id stored in a cookie.
        /// </summary>
        ReadOnlyCacheByCookie,
        /// A readonly cache storage with a scope limited to the current user and page only.
        /// </summary>
        ReadOnlyCacheByCookieAndPath,
        /// <summary>
        /// A readonly storage using a server side file to store data as json text.
        /// </summary>
        ReadOnlyJsonDocPerPath,
        ReadOnlyJsonDocPerUser,
        ReadOnlyJsonDocPerSession,
        ReadOnlyJsonDocPerCookie,
        ReadOnlyJsonDocPerCookieAndPath
    }


    /// <summary>
    /// Provides a means for limiting the scope of a storage by including the page, user or session id in the storage key.
    /// The Browser option however makes use of an autogenerated cookie id to make the key unique to each browser.
    /// </summary>
    public enum Scope
    {
        /// <summary>
        /// The variable has no scope limit.
        /// </summary>
        None,
        /// <summary>
        /// Limits the scope of a variable to the current path.
        /// </summary>
        Path,
        /// <summary>
        /// Limits the scope of a variable to the currently logged on user.
        /// </summary>
        User,
        /// <summary>
        /// Limits the scope of a variable to the current browser via an autogenerated id stored in a cookie.
        /// </summary>
        Cookie,
        /// <summary>
        /// Limits the scope of a variable to the current browser via an autogenerated id stored in a cookie
        /// and the currently logged on user.
        /// </summary>
        CookieAndPath,
        /// <summary>
        /// Limits the scope of a variable to the current browser session.
        /// </summary>
        Session,
    }

    public enum SessionScope
    {
        Default,
        PageBound
    }

    public enum CacheType
    {
        WebCache,
        MemoryCache
    }
}
